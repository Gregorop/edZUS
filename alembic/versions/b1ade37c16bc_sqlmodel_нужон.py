"""sqlModel нужон

Revision ID: b1ade37c16bc
Revises: 014225d121d1
Create Date: 2025-07-12 16:46:56.159993

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b1ade37c16bc'
down_revision: Union[str, Sequence[str], None] = '014225d121d1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('graphdata',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('line', 'histogram', name='graphtype'), nullable=False),
    sa.Column('x', sa.JSON(), nullable=False),
    sa.Column('y', sa.JSON(), nullable=False),
    sa.Column('options', sa.JSON(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('taskimage',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('base64', sa.Text(), nullable=False),
    sa.Column('mime_type', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('template_name', sa.String(), nullable=False),
    sa.Column('question', sa.Text(), nullable=False),
    sa.Column('answer_options', sa.JSON(), nullable=False),
    sa.Column('correct_answers', sa.JSON(), nullable=False),
    sa.Column('user_answers', sa.JSON(), nullable=True),
    sa.Column('solved_at', sa.DateTime(), nullable=True),
    sa.Column('table', sa.JSON(), nullable=False),
    sa.Column('variables', sa.JSON(), nullable=False),
    sa.Column('formula', sa.String(), nullable=True),
    sa.Column('graph_id', sa.Integer(), nullable=True),
    sa.Column('image_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['graph_id'], ['graphdata.id'], ),
    sa.ForeignKeyConstraint(['image_id'], ['taskimage.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    op.drop_index(op.f('ix_graph_data_id'), table_name='graph_data')
    op.drop_index(op.f('ix_task_images_id'), table_name='task_images')
    op.drop_index(op.f('ix_tasks_id'), table_name='tasks')

    op.drop_table('tasks')
    op.drop_table('graph_data')
    op.drop_table('task_images')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('task_images',
    sa.Column('base64', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('mime_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('task_images_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='task_images_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_task_images_id'), 'task_images', ['id'], unique=False)
    op.create_table('tasks',
    sa.Column('template_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('question', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('answer_options', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('correct_answers', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('user_answers', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('solved_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('graph_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('image_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('table', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('variables', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('formula', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['graph_id'], ['graph_data.id'], name=op.f('tasks_graph_id_fkey')),
    sa.ForeignKeyConstraint(['image_id'], ['task_images.id'], name=op.f('tasks_image_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('tasks_pkey'))
    )
    op.create_index(op.f('ix_tasks_id'), 'tasks', ['id'], unique=False)
    op.create_table('graph_data',
    sa.Column('type', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('x', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('y', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('options', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('graph_data_pkey'))
    )
    op.create_index(op.f('ix_graph_data_id'), 'graph_data', ['id'], unique=False)
    op.drop_table('task')
    op.drop_table('taskimage')
    op.drop_table('graphdata')
    # ### end Alembic commands ###
