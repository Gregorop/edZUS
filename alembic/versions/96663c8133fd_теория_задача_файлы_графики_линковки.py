"""теория-задача-файлы-графики-линковки

Revision ID: 96663c8133fd
Revises: cbcd73572a78
Create Date: 2025-07-13 22:07:56.669075

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "96663c8133fd"
down_revision: Union[str, Sequence[str], None] = "cbcd73572a78"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "file",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("file_path", sa.String(length=500), nullable=False),
        sa.Column("file_name", sa.String(), nullable=False),
        sa.Column("file_extension", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "theory",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("paragraphs", sa.ARRAY(sa.String()), nullable=False),
        sa.Column("discipline", sa.Text(), nullable=False),
        sa.Column("field", sa.Text(), nullable=False),
        sa.Column("subfield", sa.Text(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "oneactiontasklink",
        sa.Column("task_id", sa.Integer(), nullable=False),
        sa.Column("oneactionformula_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["oneactionformula_id"],
            ["oneactionformula.id"],
        ),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["task.id"],
        ),
        sa.PrimaryKeyConstraint("task_id", "oneactionformula_id"),
    )
    op.create_table(
        "taskfilelink",
        sa.Column("task_id", sa.Integer(), nullable=False),
        sa.Column("file_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["file_id"],
            ["file.id"],
        ),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["task.id"],
        ),
        sa.PrimaryKeyConstraint("task_id", "file_id"),
    )
    op.create_table(
        "taskgraphlink",
        sa.Column("task_id", sa.Integer(), nullable=False),
        sa.Column("graph_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["graph_id"],
            ["graphdata.id"],
        ),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["task.id"],
        ),
        sa.PrimaryKeyConstraint("task_id", "graph_id"),
    )
    op.create_table(
        "tasktheorylink",
        sa.Column("task_id", sa.Integer(), nullable=False),
        sa.Column("theory_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["task.id"],
        ),
        sa.ForeignKeyConstraint(
            ["theory_id"],
            ["theory.id"],
        ),
        sa.PrimaryKeyConstraint("task_id", "theory_id"),
    )
    op.create_table(
        "theoryfilelink",
        sa.Column("theory_id", sa.Integer(), nullable=False),
        sa.Column("file_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["file_id"],
            ["file.id"],
        ),
        sa.ForeignKeyConstraint(
            ["theory_id"],
            ["theory.id"],
        ),
        sa.PrimaryKeyConstraint("theory_id", "file_id"),
    )
    op.create_table(
        "theorygraphlink",
        sa.Column("theory_id", sa.Integer(), nullable=False),
        sa.Column("graph_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["graph_id"],
            ["graphdata.id"],
        ),
        sa.ForeignKeyConstraint(
            ["theory_id"],
            ["theory.id"],
        ),
        sa.PrimaryKeyConstraint("theory_id", "graph_id"),
    )
    op.drop_constraint(op.f("task_graph_id_fkey"), "task", type_="foreignkey")
    op.drop_constraint(op.f("task_image_id_fkey"), "task", type_="foreignkey")
    op.drop_table("taskimage")
    op.drop_column("task", "image_id")
    op.drop_column("task", "graph_id")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "task", sa.Column("graph_id", sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.add_column(
        "task", sa.Column("image_id", sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.create_foreign_key(
        op.f("task_image_id_fkey"), "task", "taskimage", ["image_id"], ["id"]
    )
    op.create_foreign_key(
        op.f("task_graph_id_fkey"), "task", "graphdata", ["graph_id"], ["id"]
    )
    op.create_table(
        "taskimage",
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("base64", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("mime_type", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("taskimage_pkey")),
    )
    op.drop_table("theorygraphlink")
    op.drop_table("theoryfilelink")
    op.drop_table("tasktheorylink")
    op.drop_table("taskgraphlink")
    op.drop_table("taskfilelink")
    op.drop_table("oneactiontasklink")
    op.drop_table("theory")
    op.drop_table("file")
    # ### end Alembic commands ###
